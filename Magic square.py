'''
–ú–∞–≥–∏—á–µ—Å–∫–∏–π –∫–≤–∞–¥—Ä–∞—Ç üå∂Ô∏è

–ú–∞–≥–∏—á–µ—Å–∫–∏–º –∫–≤–∞–¥—Ä–∞—Ç–æ–º –ø–æ—Ä—è–¥–∫–∞ nn –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –∫–≤–∞–¥—Ä–∞—Ç–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ —Ä–∞–∑–º–µ—Ä–∞ n√ón, —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–∞—è –∏–∑ –≤—Å–µ—Ö —á–∏—Å–µ–ª 1, 2, 3, ... n^2
—Ç–∞–∫, —á—Ç–æ —Å—É–º–º—ã –ø–æ –∫–∞–∂–¥–æ–º—É —Å—Ç–æ–ª–±—Ü—É, –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–µ –∏ –∫–∞–∂–¥–æ–π –∏–∑ –¥–≤—É—Ö –¥–∏–∞–≥–æ–Ω–∞–ª–µ–π —Ä–∞–≤–Ω—ã –º–µ–∂–¥—É —Å–æ–±–æ–π. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É,
–∫–æ—Ç–æ—Ä–∞—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∑–∞–¥–∞–Ω–Ω–∞—è –∫–≤–∞–¥—Ä–∞—Ç–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞ –º–∞–≥–∏—á–µ—Å–∫–∏–º –∫–≤–∞–¥—Ä–∞—Ç–æ–º.

–§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—ë—Ç—Å—è –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ n ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –∏ —Å—Ç–æ–ª–±—Ü–æ–≤ –≤ –º–∞—Ç—Ä–∏—Ü–µ, –∑–∞—Ç–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Ç—Ä–∏—Ü—ã: n —Å—Ç—Ä–æ–∫,
–ø–æ n —á–∏—Å–µ–ª –≤ –∫–∞–∂–¥–æ–π, —Ä–∞–∑–¥–µ–ª—ë–Ω–Ω—ã–µ –ø—Ä–æ–±–µ–ª–∞–º–∏.

–§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ —Å–ª–æ–≤–æ YES, –µ—Å–ª–∏ –º–∞—Ç—Ä–∏—Ü–∞ —è–≤–ª—è–µ—Ç—Å—è –º–∞–≥–∏—á–µ—Å–∫–∏–º –∫–≤–∞–¥—Ä–∞—Ç–æ–º, –∏ —Å–ª–æ–≤–æ NO –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ.


Sample Input 1:
3
8 1 6
3 5 7
4 9 2

Sample Output 1:
YES

Sample Input 2:
3
8 2 6
3 5 7
4 9 1

Sample Output 1:
NO
'''

n = int(input())
matrix = [[int(i) for i in input().split()] for _ in range(n)]
main_diag = 0
secondary_diag = 0
total_string = 0
total_post = 0
total_matrix = 0
l, m = 0, 0
for k in range(n):  # –ø–æ–¥—Å—á–µ—Ç —Å—É–º–º—ã –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    for j in range(n):
        total_matrix += matrix[k][j]

if total_matrix != (n ** 2 * (n ** 2 + 1)) / 2:  # –ø—Ä–æ–≤–µ—Ä–∫–∞ –º–∞—Ç—Ä–∏—Ü—ã –Ω–∞ —Å—É–º–º—É –∫–≤–∞–¥—Ä–∞—Ç–æ–≤ –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    flag = False
elif matrix[0][1] == matrix[l][m]:
    flag = False
else:
    for i in range(n):
        main_diag += matrix[i][i]  # —Å—É–º–º–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –æ—Å–Ω–æ–≤–Ω–æ–π –¥–∏–∞–≥–æ–Ω–∞–ª–∏
        secondary_diag += matrix[n - i - 1][i] # —Å—É–º–º–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤—Ç–æ—Ä–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ–π –¥–∏–∞–≥–æ–Ω–∞–ª–∏

    for string in matrix:  # –ø–æ–¥—Å—á–µ—Ç —Å—É–º–º—ã —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∫–∞–∂–¥–æ–π –∏–∑ —Å—Ç—Ä–æ–∫ –∏ —Å—Ä–∞–≤–ª–µ–Ω–∏–µ —Å –æ—Å–Ω–æ–≤–Ω–æ–π –¥–∏–∞–≥–æ–Ω–∞–ª—å—é
        total_string = sum(string)
        if total_string == main_diag and total_string == secondary_diag:
            flag = True
        else:
            flag = False
            break

    for k in range(n):  # –ø–æ–¥—Å—á–µ—Ç —Å—É–º–º—ã —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å—Ç–æ–ª–±—Ü–æ–≤
        for j in range(n):
            total_post += matrix[j][k]
        if total_post == total_string:
            flag = True
            total_post = 0
        else:
            flag = False
            break

if flag:
    print('YES')
else:
    print('NO')
